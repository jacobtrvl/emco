# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022 Intel Corporation

# create NetworkPolicy netpol-web
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: netpol-web
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: networking.k8s.io/v1
    kind: networkpolicy
    name: netpol-web
file:
  networkpolicy-web.yaml

---
# add customization for netpol-web
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/netpol-web/customizations
metadata:
  name: netpol-web-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: "dummy"
    clusterLabel: {{.ClusterLabel}}
    mode: allow
files:
  - customization-dummy.yaml
  # GAC will ignore the content in this file 
  # emcoctl requires a file to create the multipart request
  # customization using files only supported for ConfigMap/Secret

---
# create NetworkPolicy netpol-db
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: netpol-db
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: networking.k8s.io/v1
    kind: networkpolicy
    name: netpol-db
file:
  networkpolicy-db.yaml

---
# add customization for netpol-db
# patch netpol-db to update the role
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/netpol-db/customizations
metadata:
  name: netpol-db-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: "dummy"
    clusterLabel: {{.ClusterLabel}}
    mode: allow
  patchType: "json"
  patchJson: [
    {
	    "op": "replace",
	    "path": "/spec/podSelector/matchLabels/role",
	    "value": "database" # original value db
	  }
	]
files:
  - customization-dummy.yaml
  # the content in this file will be ignored 
  # customization using files only supported for ConfigMap/Secret
  # emcoctl requires a file to create the multipart request

---
# create ConfigMap cm-game
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: cm-game
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: v1
    kind: ConfigMap
    name: cm-game
file:
  configmap-game.yaml

---
# add customization for cm-game
# add more data configurations to cm-game using the customization files
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/cm-game/customizations
metadata:
  name: cm-game-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: "dummy"
    clusterLabel: {{.ClusterLabel}}
    mode: allow
files:
  - info.json # data key will be `info.json`

---
# create ConfigMap cm-team
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: cm-team
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: v1
    kind: ConfigMap
    name: cm-team
file:
  configmap-team.yaml

---
# add customization for cm-team 
# add more data configurations to cm-team using the customization files 
# patch cm-team to update the team_size
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/cm-team/customizations
metadata:
  name: cm-team-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: ""
    clusterLabel: {{.ClusterLabel}}
    mode: allow
  patchType: "json"
  patchJson: [
    {
	    "op": "replace",
	    "path": "/data/team_size",
	    "value": "10" # original value `5`
	  }
	]
  configMapOptions:
    dataKeyOptions:
      - fileName: data-game.yaml
        keyName: game.properties
      - fileName: data-userinterface.yaml
        keyName: user-interface.properties
files:
  - data-game.yaml # data key will be `game.properties`
  - data-userinterface.yaml # data key will be `user-interface.properties`

---
# create Secret secret-user
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: secret-user
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: v1
    kind: Secret
    name: secret-user
file:
  secret-user.yaml

---
# add customization for secret-user
# add more data configurations to secret-user using the customization files
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/secret-user/customizations
metadata:
  name: secret-user-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: "cluster1"
    clusterLabel: {{.ClusterLabel}}
    mode: allow
files:
  - data-userexpiration.yaml # data key will be `data-userexpiration.yaml`

---
# create Secret secret-auth
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: secret-auth
spec:
  app: {{.App1}}
  newObject: "true"
  resourceGVK:
    apiVersion: v1
    kind: Secret
    name: secret-auth
file:
  secret-auth.yaml

---
# add customization for secret-auth
# add more data configurations to secret-auth using the customization files 
# patch secret-auth to add USER_NAME and PASSWORD
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/secret-auth/customizations
metadata:
  name: secret-auth-customization
spec:
  clusterSpecific: "false"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: "dummy"
    clusterLabel: {{.ClusterLabel}}
    mode: allow
  patchType: "json"
  patchJson: [
	  {
	    "op": "add",
	    "path": "/data/USER_NAME",
	    "value": "YWRtaW4="
	  },
    {
	    "op": "add",
	    "path": "/data/PASSWORD",
	    "value": "MWYyZDFlMmU2N2Rm"
	  }
	]
  secretOptions:
    dataKeyOptions:
      - fileName: data-userexpiration.yaml
        keyName: EXPIRATION
files:
  - data-userexpiration.yaml # data key will be `EXPIRATION`

---
# create StatefulSet sts-etcd
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources
metadata:
  name: sts-etcd
spec:
  app: {{.App1}}
  newObject: "false"
  resourceGVK:
    apiVersion: apps/v1
    kind: StatefulSet
    name: etcd
file:
  statefulset-etcd.yaml

---
# add customization for etcd-statefulset
# patch etcd-statefulset to update the number of replicas
version: emco/v2
resourceContext:
  anchor: projects/{{.ProjectName}}/composite-apps/{{.CompositeAppGac}}/v1/deployment-intent-groups/{{.DeploymentIntent}}/generic-k8s-intents/{{.GacIntent}}/resources/sts-etcd/customizations
metadata:
  name: sts-etcd-customization
spec:
  clusterSpecific: "true"
  clusterInfo:
    scope: label
    clusterProvider: {{.ClusterProvider}}
    cluster: ""
    clusterLabel: {{.ClusterLabel}}
    mode: allow
  patchType: "json"
  patchJson: [
	  {
	    "op": "replace",
	    "path": "/spec/replicas",
	    "value": 1 # original value `3`
	  }
	]
files:
  - customization-dummy.yaml
# the content in this file will be ignored 
# customization using files only supported for ConfigMap/Secret
# emcoctl requires a file to create the multipart request
