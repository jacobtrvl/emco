# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - image: "{{ .Values.common.repository }}{{ .Values.image }}:{{ .Values.common.imageTag }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}
        env:
        - name: NO_PROXY
          value: {{ .Values.common.noProxyHosts }}
        - name: no_proxy
          value: {{ .Values.common.noProxyHosts }}
        - name: HTTP_PROXY
          value: {{ .Values.common.httpProxy }}
        - name: http_proxy
          value: {{ .Values.common.httpProxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.common.httpsProxy }}
        - name: https_proxy
          value: {{ .Values.common.httpsProxy }}
        {{- if eq (empty .Values.global.disableDbAuth) true }}
        - name: DB_EMCO_USERNAME
          value: emco
        - name: DB_EMCO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: emco-mongo
              key: userPassword
        - name: CONTEXTDB_EMCO_USERNAME
          value: "root"
        - name: CONTEXTDB_EMCO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: emco-etcd
              key: etcd-root-password
        {{- end }}
        command: [{{ .Values.command }}]
        args: [{{ .Values.args }}]
        workingDir: {{ .Values.workingDir }}
        ports:
        - containerPort: {{ .Values.serviceInternal.internalPort }}
        volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: {{ .Values.workingDir }}/config.json
            name: {{ include "common.name" .}}
            subPath: config.json
        resources:
{{ include "common.resources" .  }}
        {{- if .Values.nodeSelector }}
        nodeSelector:
{{ toYaml .Values.nodeSelector  }}
        {{- end -}}
        {{- if .Values.affinity }}
        affinity:
{{ toYaml .Values.affinity  }}
        {{- end }}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name : {{ include "common.name" . }}
        configMap:
          name: {{ include "common.fullname" . }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
